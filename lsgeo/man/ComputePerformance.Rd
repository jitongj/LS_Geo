% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Type1_Power.R
\name{ComputePerformance}
\alias{ComputePerformance}
\title{ComputePerformance}
\usage{
ComputePerformance(P)
}
\arguments{
\item{P}{list of parameters}
}
\value{
list of reject, pvalue, kappaHat, D, DGroups,HatE_nu_vec
}
\description{
ComputePerformance
}
\examples{
\dontrun{
P <- list(
  n = 1200, # size of graph
  K_vec = c(5, 7, 10), # values of K (number of cliques)
  dim = 3, # dimension of latent space
  kappa = 0.75, # curvature of latent space
  numSim = 10, # number of sets of cliques to simulate
  beta = -0.01, # lower bound for distribution of fixed effects
  ell_vec = c(7), # values of ell (clique size)
  alpha = 0.05, # significance level of test
  zeta = 1, # scaling in front of distances (default = 1)
  scale = 2.5, # scale for generating points in hyperbolic space
  ub_theta = pi, # upper bound for theta in spherical LS
  ub_phi = 2 * pi, # upper bound for phi in spherical LS
  delta = 10^(-2), # spread of nodes around group centers in spherical LS
  rate = 1/3, # rate used when sub-sampling
  sigma = 0.8, # spread of points in Euclidean space
  geometry_true = 'E', # geometry of simulated graphs
  geometry_test = 'S', # geometry to test in latent space
  numSamples = 45, # nodes in one group to find cliques
  a = 1/3, # lower bound for searching kappa
  b = 1.5, # upper bound for searching kappa
  q = 2, # number of eigenvalues to minimize for kappa estimate
  m = c(6) # sub-sample rate, m = clique_size - 1
)
result <- ComputePerformance(P)
}
}
